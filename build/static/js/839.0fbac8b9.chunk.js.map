{"version":3,"file":"static/js/839.0fbac8b9.chunk.js","mappings":"kMAsCA,EAlCqB,SAAH,GAAsB,IAAhBA,EAAQ,EAARA,SACfC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,IAAMC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACrBC,GAAWC,EAAAA,EAAAA,MAejB,OACE,iBAAKC,UAAU,2BAA0B,WACvC,gBAAKA,UAAU,iCAAgC,UAC7C,gBAAKC,IAAKN,EAAKO,IAAI,aAErB,iBAAMF,UAAU,2BAA0B,SAAEN,KAC5C,iBAAKM,UAAU,0BAAyB,WACtC,gBAAKA,UAAU,uBAAuBG,QAjBrB,SAACC,GACtBA,EAAKC,kBACLP,GAASQ,EAAAA,EAAAA,IAAWb,GACtB,EAcoE,qBAC9D,iBAAMO,UAAU,uBAAsB,SAAEH,KACxC,gBAAKG,UAAU,uBAAuBG,QAvBxB,SAACC,GACnBA,EAAKC,kBACLP,GAASS,EAAAA,EAAAA,IAAQd,GACnB,EAoBiE,wBAE7D,iBAAMO,UAAU,2BAA0B,SAAEJ,KAC5C,gBAAKI,UAAU,+BAA+BG,QAjB3B,SAACC,GACtBA,EAAKC,kBACLP,GAASU,EAAAA,EAAAA,IAAWf,GACtB,EAc0E,sBAG5E,ECLA,EAzBiB,WACf,IACMgB,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAE9B,OACE,iBAAKb,UAAU,qBAAoB,WACjC,gBAAKA,UAAU,6BAA4B,SANhC,CAAC,UAAW,cAAe,WAAY,QAAS,UAOjDc,KAAI,SAACV,EAAMW,GACjB,OACE,gBAAKf,UAAU,mCAAkC,UAC/C,0BAAOI,KAD8CW,EAI3D,MAEDN,EAAUK,KAAI,SAACrB,EAAUsB,GAAK,OAC7B,SAAC,EAAY,CAAatB,SAAUA,GAAjBsB,EAA6B,KAElD,kBAAMf,UAAU,4BAA2B,qBAAUY,OAI3D,C,+HC7BO,IAAMI,EAAiB,SAACC,GAAK,OAAKA,EAAMC,SAASA,QAAQ,EACnDP,EAAa,SAACM,GAAK,OAAKA,EAAME,KAAKA,IAAI,EACvCC,EAAkB,SAACH,GAC9B,OAAKA,EAAME,KAAKA,KACTF,EAAME,KAAKA,KAAKE,QAAO,SAACC,EAAO7B,GAAQ,OAAK6B,EAAQ7B,EAASI,QAAQ,GAAE,GADjDoB,EAAME,KAAKA,IAE1C,EACaN,EAAkB,SAACI,GAC9B,OAAKA,EAAME,KAAKA,KACTF,EAAME,KAAKA,KAAKE,QAAO,SAACC,EAAO7B,GAAQ,OAAK6B,EAAQ7B,EAASI,SAAWJ,EAASG,KAAK,GAAE,GADlEqB,EAAME,KAAKA,IAE1C,C","sources":["components/checkout-item/checkout-item.jsx","routes/checkout/checkout.jsx","store/cart/cart.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { addCart, removeCart, deleteCart  } from '../../features/cartSlice'\n\nimport './checkout-item.scss'\nconst CheckoutItem = ({ cartItem }) => {\n  const {brand, url , price, quantity } = cartItem\n  const dispatch = useDispatch()\n  const addCartItem = (item) => {\n    item.stopPropagation()\n    dispatch(addCart(cartItem))\n  }\n  const removeCartItem = (item) => {\n    item.stopPropagation()\n    dispatch(removeCart(cartItem))\n  }\n\n  const deleteCartItem = (item) => {\n    item.stopPropagation()\n    dispatch(deleteCart(cartItem))\n  }\n\n  return (\n    <div className=\"checkout-item__container\">\n      <div className=\"checkout-item__image-container\">\n        <img src={url} alt=\"brand\"/>\n      </div>\n      <span className=\"checkout-item__base-span\">{brand}</span>\n      <div className=\"checkout-item__quantity\">\n        <div className=\"checkout-item__arrow\" onClick={removeCartItem}>&#10094;</div>\n        <span className=\"checkout-item__value\">{quantity}</span>\n        <div className=\"checkout-item__arrow\" onClick={addCartItem}>&#10095;</div>\n      </div>\n      <span className=\"checkout-item__base-span\">{price}</span>\n      <div className=\"checkout-item__remove-button\" onClick={deleteCartItem}>&#10005;</div>\n    </div>\n  ) \n}\n\nexport default CheckoutItem","import { useSelector } from 'react-redux'\nimport { selectCart, selectCartTotal } from '../../store/cart/cart'\nimport CheckoutItem from '../../components/checkout-item/checkout-item';\nimport './checkout.scss'\n\n\nconst Checkout = () => {\n  const header = ['Product', 'Description', 'Quantity', 'Price', 'Remove']\n  const cartItems = useSelector(selectCart)\n  const cartTotal = useSelector(selectCartTotal)\n  \n  return (\n    <div className=\"checkout-container\">\n      <div className=\"checkout-container__header\">\n        {header.map((item, index) => {\n          return (\n            <div className=\"checkout-container__header-block\" key={index}>\n              <span>{item}</span>\n            </div>\n          )\n        })}\n      </div>\n      {cartItems.map((cartItem, index) => (\n        <CheckoutItem key={index} cartItem={cartItem} />\n      ))}\n      <span className=\"checkout-container__total\">Total: ${cartTotal}</span>\n    </div>\n  )\n\n}\n\nexport default Checkout","export const selectCartOpen = (state) => state.cartOpen.cartOpen\nexport const selectCart = (state) => state.cart.cart\nexport const selectCartCount = (state) => {\n  if (!state.cart.cart) return state.cart.cart\n  return state.cart.cart.reduce((total, cartItem) => total + cartItem.quantity, 0)\n}\nexport const selectCartTotal = (state) => {\n  if (!state.cart.cart) return state.cart.cart\n  return state.cart.cart.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0)\n}"],"names":["cartItem","brand","url","price","quantity","dispatch","useDispatch","className","src","alt","onClick","item","stopPropagation","removeCart","addCart","deleteCart","cartItems","useSelector","selectCart","cartTotal","selectCartTotal","map","index","selectCartOpen","state","cartOpen","cart","selectCartCount","reduce","total"],"sourceRoot":""}